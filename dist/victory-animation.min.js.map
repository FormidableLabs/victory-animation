{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///victory-animation.min.js","webpack:///webpack/bootstrap 6a2539ed81eea0a8379f","webpack:///./src/index.js","webpack:///./src/components/victory-animation.jsx","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///./~/d3/d3.js","webpack:///./src/util.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","VictoryAnimation","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_get","_x","_x2","_x3","_again","object","property","receiver","desc","parent","getter","undefined","Function","getOwnPropertyDescriptor","get","getPrototypeOf","_react","_react2","_d3","_d32","_util","addVictoryInterpolator","_React$Component","state","Array","isArray","data","interpolator","step","queue","ease","easing","functionToBeRunEachFrame","bind","nextProps","_this","raf","cancelAnimationFrame","interpolate","setTimeout","delay","forEach","push","traverseQueue","_this2","onEnd","setState","shift","velocity","requestAnimationFrame","children","Component","propTypes","PropTypes","number","string","func","oneOfType","array","defaultProps","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","mid","right","d3_zipLength","d","d3_range_integerScale","k","d3_class","ctor","properties","d3_Map","_","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","source","method","apply","d3_vendorSymbol","name","charAt","toUpperCase","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","createElementNS","createElement","createNS","d3_selectionRemove","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","toLowerCase","color","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer_step","now","d3_timer_mark","d3_timer_sweep","isFinite","clearTimeout","d3_timer_timeout","d3_timer_interval","d3_timer_frame","Date","d3_timer_active","d3_timer_queueHead","t","t0","t1","time","Infinity","d3_timer_queueTail","d3_format_precision","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","d3_date_utc","UTC","d3_time_interval","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","d3_geom_quadtreeFind","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","transform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","active","count","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","transition","duration","timer","elapsed","tweened","tick","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","Error","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","then","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","oc","kc","lc","rc1","t30","t12","rc0","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","interpolatorAdded","victoryInterpolator","aval","bval"],"mappings":"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","file":"victory-animation.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VictoryAnimation\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"VictoryAnimation\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VictoryAnimation\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"VictoryAnimation\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {\n\t  VictoryAnimation: __webpack_require__(1)\n\t};\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*global requestAnimationFrame, cancelAnimationFrame, setTimeout*/\n\t\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _d3 = __webpack_require__(3);\n\t\n\tvar _d32 = _interopRequireDefault(_d3);\n\t\n\tvar _util = __webpack_require__(4);\n\t\n\t(0, _util.addVictoryInterpolator)();\n\t\n\tvar VictoryAnimation = (function (_React$Component) {\n\t  _inherits(VictoryAnimation, _React$Component);\n\t\n\t  function VictoryAnimation(props) {\n\t    _classCallCheck(this, VictoryAnimation);\n\t\n\t    _get(Object.getPrototypeOf(VictoryAnimation.prototype), \"constructor\", this).call(this, props);\n\t    /* defaults */\n\t    this.state = Array.isArray(this.props.data) ? this.props.data[0] : this.props.data;\n\t    this.interpolator = null;\n\t    this.step = 0;\n\t    this.queue = [];\n\t    /* build easing function */\n\t    this.ease = _d32[\"default\"].ease(this.props.easing);\n\t    /*\n\t      unlike React.createClass({}), there is no autobinding of this in ES6 classes\n\t      so we bind functionToBeRunEachFrame to current instance of victory animation class\n\t    */\n\t    this.functionToBeRunEachFrame = this.functionToBeRunEachFrame.bind(this);\n\t  }\n\t\n\t  /* lifecycle */\n\t\n\t  _createClass(VictoryAnimation, [{\n\t    key: \"componentWillReceiveProps\",\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      var _this = this;\n\t\n\t      /* cancel existing loop if it exists */\n\t      if (this.raf) {\n\t        cancelAnimationFrame(this.raf);\n\t      }\n\t      /* If an object was supplied */\n\t      if (Array.isArray(nextProps.data) === false) {\n\t        /* compare cached version to next props */\n\t        this.interpolator = _d32[\"default\"].interpolate(this.state, nextProps.data);\n\t        /* reset step to zero */\n\t        this.step = 0;\n\t        /* start request animation frame */\n\t        setTimeout(function () {\n\t          _this.raf = _this.functionToBeRunEachFrame();\n\t        }, this.props.delay);\n\t        /* If an array was supplied */\n\t      } else {\n\t          /* Build our tween queue */\n\t          nextProps.data.forEach(function (data) {\n\t            _this.queue.push(data);\n\t          });\n\t          /* Start traversing the tween queue */\n\t          this.traverseQueue();\n\t        }\n\t    }\n\t\n\t    /* Traverse the tween queue */\n\t  }, {\n\t    key: \"traverseQueue\",\n\t    value: function traverseQueue() {\n\t      var _this2 = this;\n\t\n\t      if (this.queue.length > 0) {\n\t        /* Get the next index */\n\t        var data = this.queue[0];\n\t        /* compare cached version to next props */\n\t        this.interpolator = _d32[\"default\"].interpolate(this.state, data);\n\t        /* reset step to zero */\n\t        this.step = 0;\n\t        setTimeout(function () {\n\t          _this2.raf = _this2.functionToBeRunEachFrame();\n\t        }, this.props.delay);\n\t      } else if (this.props.onEnd) {\n\t        this.props.onEnd();\n\t      }\n\t    }\n\t\n\t    /* every frame we... */\n\t  }, {\n\t    key: \"functionToBeRunEachFrame\",\n\t    value: function functionToBeRunEachFrame() {\n\t      /*\n\t        step can generate imprecise values, sometimes greater than 1\n\t        if this happens set the state to 1 and return, cancelling the loop\n\t      */\n\t      if (this.step >= 1) {\n\t        this.step = 1;\n\t        this.setState(this.interpolator(this.step));\n\t        if (this.queue.length > 0) {\n\t          cancelAnimationFrame(this.raf);\n\t          this.queue.shift();\n\t          this.traverseQueue();\n\t        } else if (this.props.onEnd) {\n\t          this.props.onEnd();\n\t        }\n\t        return;\n\t      }\n\t      /*\n\t        if we're not at the end of the loop, set the state by passing\n\t        current step value that's transformed by the ease function to the\n\t        interpolator, which is cached for performance whenever props are received\n\t      */\n\t      this.setState(this.interpolator(this.ease(this.step)));\n\t      /* increase step by velocity */\n\t      this.step += this.props.velocity;\n\t      /*\n\t        requestAnimationFrame calls a function on a frame.\n\t        continue the loop by feeding functionToBeRunEachFrame\n\t      */\n\t      this.raf = requestAnimationFrame(this.functionToBeRunEachFrame);\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      return this.props.children(this.state);\n\t    }\n\t  }]);\n\t\n\t  return VictoryAnimation;\n\t})(_react2[\"default\"].Component);\n\t\n\tVictoryAnimation.propTypes = {\n\t  velocity: _react2[\"default\"].PropTypes.number,\n\t  easing: _react2[\"default\"].PropTypes.string,\n\t  delay: _react2[\"default\"].PropTypes.number,\n\t  onEnd: _react2[\"default\"].PropTypes.func,\n\t  data: _react2[\"default\"].PropTypes.oneOfType([_react2[\"default\"].PropTypes.object, _react2[\"default\"].PropTypes.array])\n\t};\n\t\n\tVictoryAnimation.defaultProps = {\n\t  /* velocity modifies step each frame */\n\t  velocity: 0.02,\n\t  /* easing modifies step each frame */\n\t  easing: \"quad-in-out\",\n\t  /* delay between transitions */\n\t  delay: 0,\n\t  /* we got nothin' */\n\t  data: {}\n\t};\n\t\n\texports[\"default\"] = VictoryAnimation;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.6\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0) {\n\t        prefix = name.slice(0, i);\n\t        name = name.slice(i + 1);\n\t      }\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n\t            exitNodes[i] = node;\n\t          } else {\n\t            nodeByKeyValue.set(keyValue, node);\n\t          }\n\t          keyValues[i] = keyValue;\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = nodes;\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged && d3.event.target === target);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n\t    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n\t    function interpolate(t) {\n\t      var s = t * S;\n\t      if (dr) {\n\t        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      }\n\t      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n\t    }\n\t    interpolate.duration = S * 1e3;\n\t    return interpolate;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: +_\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged && d3.event.target === target);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    format = format.toLowerCase();\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      f: false,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  };\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now();\n\t    d3_timer_active = d3_timer_queueHead;\n\t    while (d3_timer_active) {\n\t      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n\t      d3_timer_active = d3_timer_active.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.f) {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      } else {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n\t    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n\t      s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: 1,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: 3,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    } else {\n\t      s.push(\"\");\n\t    }\n\t    if (ra != rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(s.pop() + \"rotate(\" + rb + \")\");\n\t    }\n\t    if (wa != wb) {\n\t      q.push({\n\t        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(s.pop() + \"skewX(\" + wb + \")\");\n\t    }\n\t    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n\t      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: n - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: n - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] != 1 || kb[1] != 1) {\n\t      s.push(s.pop() + \"scale(\" + kb + \")\");\n\t    }\n\t    n = q.length;\n\t    return function(t) {\n\t      var i = -1, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: (x - x0) / k\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight / (t.weight + s.weight));\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) alpha = x; else alpha = 0;\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        d3.timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = 0;\n\t      root.y = 0;\n\t      root.dx = size[0];\n\t      root.dy = size[1];\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n\t      Math.floor), e;\n\t      return function(d) {\n\t        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t        if (x1 != null) {\n\t          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.join(\"L\");\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return d3_svg_lineLinear(points) + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, active;\n\t      if ((lock = this[ns]) && (active = lock[lock.active])) {\n\t        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id];\n\t    if (!transition) {\n\t      var time = inherit.time;\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t      d3.timer(function(elapsed) {\n\t        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n\t        timer.t = delay + time;\n\t        if (delay <= elapsed) return start(elapsed - delay);\n\t        timer.c = start;\n\t        function start(elapsed) {\n\t          if (lock.active > id) return stop();\n\t          var active = lock[lock.active];\n\t          if (active) {\n\t            --lock.count;\n\t            delete lock[lock.active];\n\t            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t          }\n\t          lock.active = id;\n\t          transition.event && transition.event.start.call(node, node.__data__, i);\n\t          transition.tween.forEach(function(key, value) {\n\t            if (value = value.call(node, node.__data__, i)) {\n\t              tweened.push(value);\n\t            }\n\t          });\n\t          ease = transition.ease;\n\t          duration = transition.duration;\n\t          d3.timer(function() {\n\t            timer.c = tick(elapsed || 1) ? d3_true : tick;\n\t            return 1;\n\t          }, 0, time);\n\t        }\n\t        function tick(elapsed) {\n\t          if (lock.active !== id) return 1;\n\t          var t = elapsed / duration, e = ease(t), n = tweened.length;\n\t          while (n > 0) {\n\t            tweened[--n].call(node, e);\n\t          }\n\t          if (t >= 1) {\n\t            transition.event && transition.event.end.call(node, node.__data__, i);\n\t            return stop();\n\t          }\n\t        }\n\t        function stop() {\n\t          if (--lock.count) delete lock[id]; else delete node[ns];\n\t          return 1;\n\t        }\n\t      }, 0, time);\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = arguments;\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n\t  this.d3 = d3;\n\t}();\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tvar _d3 = __webpack_require__(3);\n\t\n\tvar _d32 = _interopRequireDefault(_d3);\n\t\n\tvar interpolatorAdded = false;\n\t\n\t/**\n\t * By default, `d3.interpolate` (which cycles through a list of interpolators)\n\t * has a few downsides:\n\t *\n\t * - `null` values get turned into 0.\n\t * - `undefined`, `function`, and some other value types get turned into NaN.\n\t * - It tries to interpolate between identical start->end values, doing\n\t *   unnecessary calculations that sometimes result in floating point rounding\n\t *   errors.\n\t *\n\t * If only the default interpolators are used, `VictoryAnimation` will happily\n\t * pass down NaN (and other bad) values as props to the wrapped component.\n\t * The component will then either use the incorrect values or complain that it\n\t * was passed props of the incorrect type. This custom interpolator is added\n\t * using the `d3.interpolators` API, and prevents such cases from happening\n\t * for most values.\n\t *\n\t * @param {any} a - Start value.\n\t * @param {any} b - End value.\n\t * @returns {Function} Returns an interpolation function, if possible.\n\t */\n\tvar victoryInterpolator = function victoryInterpolator(a, b) {\n\t  // If the values are strictly equal, or either value is null or undefined,\n\t  // just use the start value `a` or end value `b` at every step, as there is\n\t  // no reasonable in-between value. The value will jump, but we can try to\n\t  // jump at a good time (like the halfway point).\n\t  if (a === b || a == null || b == null) {\n\t    return function (t) {\n\t      // Switch to `b` halfway through the interpolation.\n\t      return t < 0.5 ? a : b;\n\t    };\n\t  }\n\t  if (typeof a === \"function\" || typeof b === \"function\") {\n\t    return function (t) {\n\t      // We're interpolating to or from a function. The interpolated value will\n\t      // be a function that calls `a` (if it's a function) and `b` (if it's a\n\t      // function) and calls `d3.interpolate` on the resulting values.\n\t      // Note that our function won't necessarily be called (that's up to the\n\t      // component) - but if it does get called, it will return an\n\t      // appropriately interpolated value.\n\t      return function () {\n\t        var aval = typeof a === \"function\" ? a.apply(this, arguments) : a;\n\t        var bval = typeof b === \"function\" ? b.apply(this, arguments) : b;\n\t        return _d32[\"default\"].interpolate(aval, bval)(t);\n\t      };\n\t    };\n\t  }\n\t};\n\t\n\texports.victoryInterpolator = victoryInterpolator;\n\tvar addVictoryInterpolator = function addVictoryInterpolator() {\n\t  if (!interpolatorAdded) {\n\t    _d32[\"default\"].interpolators.push(victoryInterpolator);\n\t    interpolatorAdded = true;\n\t  }\n\t};\n\texports.addVictoryInterpolator = addVictoryInterpolator;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** victory-animation.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6a2539ed81eea0a8379f\n **/","module.exports = {\n  VictoryAnimation: require(\"./components/victory-animation\")\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","/*global requestAnimationFrame, cancelAnimationFrame, setTimeout*/\n\nimport React from \"react\";\nimport d3 from \"d3\";\nimport { addVictoryInterpolator } from \"../util\";\n\naddVictoryInterpolator();\n\nclass VictoryAnimation extends React.Component {\n  constructor(props) {\n    super(props);\n    /* defaults */\n    this.state = Array.isArray(this.props.data)\n      ? this.props.data[0] : this.props.data;\n    this.interpolator = null;\n    this.step = 0;\n    this.queue = [];\n    /* build easing function */\n    this.ease = d3.ease(this.props.easing);\n    /*\n      unlike React.createClass({}), there is no autobinding of this in ES6 classes\n      so we bind functionToBeRunEachFrame to current instance of victory animation class\n    */\n    this.functionToBeRunEachFrame = this.functionToBeRunEachFrame.bind(this);\n  }\n  /* lifecycle */\n  componentWillReceiveProps(nextProps) {\n    /* cancel existing loop if it exists */\n    if (this.raf) {\n      cancelAnimationFrame(this.raf);\n    }\n    /* If an object was supplied */\n    if (Array.isArray(nextProps.data) === false) {\n      /* compare cached version to next props */\n      this.interpolator = d3.interpolate(this.state, nextProps.data);\n      /* reset step to zero */\n      this.step = 0;\n      /* start request animation frame */\n      setTimeout(() => {\n        this.raf = this.functionToBeRunEachFrame();\n      }, this.props.delay);\n    /* If an array was supplied */\n    } else {\n      /* Build our tween queue */\n      nextProps.data.forEach((data) => {\n        this.queue.push(data);\n      });\n      /* Start traversing the tween queue */\n      this.traverseQueue();\n    }\n  }\n  /* Traverse the tween queue */\n  traverseQueue() {\n    if (this.queue.length > 0) {\n      /* Get the next index */\n      const data = this.queue[0];\n      /* compare cached version to next props */\n      this.interpolator = d3.interpolate(this.state, data);\n      /* reset step to zero */\n      this.step = 0;\n      setTimeout(() => {\n        this.raf = this.functionToBeRunEachFrame();\n      }, this.props.delay);\n    } else if (this.props.onEnd) {\n      this.props.onEnd();\n    }\n  }\n  /* every frame we... */\n  functionToBeRunEachFrame() {\n    /*\n      step can generate imprecise values, sometimes greater than 1\n      if this happens set the state to 1 and return, cancelling the loop\n    */\n    if (this.step >= 1) {\n      this.step = 1;\n      this.setState(this.interpolator(this.step));\n      if (this.queue.length > 0) {\n        cancelAnimationFrame(this.raf);\n        this.queue.shift();\n        this.traverseQueue();\n      } else if (this.props.onEnd) {\n        this.props.onEnd();\n      }\n      return;\n    }\n    /*\n      if we're not at the end of the loop, set the state by passing\n      current step value that's transformed by the ease function to the\n      interpolator, which is cached for performance whenever props are received\n    */\n    this.setState(this.interpolator(this.ease(this.step)));\n    /* increase step by velocity */\n    this.step += this.props.velocity;\n    /*\n      requestAnimationFrame calls a function on a frame.\n      continue the loop by feeding functionToBeRunEachFrame\n    */\n    this.raf = requestAnimationFrame(this.functionToBeRunEachFrame);\n  }\n  render() {\n    return this.props.children(this.state);\n  }\n}\n\nVictoryAnimation.propTypes = {\n  velocity: React.PropTypes.number,\n  easing: React.PropTypes.string,\n  delay: React.PropTypes.number,\n  onEnd: React.PropTypes.func,\n  data: React.PropTypes.oneOfType([\n    React.PropTypes.object,\n    React.PropTypes.array\n  ])\n};\n\nVictoryAnimation.defaultProps = {\n  /* velocity modifies step each frame */\n  velocity: 0.02,\n  /* easing modifies step each frame */\n  easing: \"quad-in-out\",\n  /* delay between transitions */\n  delay: 0,\n  /* we got nothin' */\n  data: {}\n};\n\nexport default VictoryAnimation;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/victory-animation.jsx\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n ** module id = 2\n ** module chunks = 0\n **/","!function() {\n  var d3 = {\n    version: \"3.5.6\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = nodes;\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    format = format.toLowerCase();\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n        if (x1 != null) {\n          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, active;\n      if ((lock = this[ns]) && (active = lock[lock.active])) {\n        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          var active = lock[lock.active];\n          if (active) {\n            --lock.count;\n            delete lock[lock.active];\n            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n          }\n          lock.active = id;\n          transition.event && transition.event.start.call(node, node.__data__, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, node.__data__, i)) {\n              tweened.push(value);\n            }\n          });\n          ease = transition.ease;\n          duration = transition.duration;\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return 1;\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, node.__data__, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node[ns];\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 3\n ** module chunks = 0\n **/","import d3 from \"d3\";\n\nlet interpolatorAdded = false;\n\n/**\n * By default, `d3.interpolate` (which cycles through a list of interpolators)\n * has a few downsides:\n *\n * - `null` values get turned into 0.\n * - `undefined`, `function`, and some other value types get turned into NaN.\n * - It tries to interpolate between identical start->end values, doing\n *   unnecessary calculations that sometimes result in floating point rounding\n *   errors.\n *\n * If only the default interpolators are used, `VictoryAnimation` will happily\n * pass down NaN (and other bad) values as props to the wrapped component.\n * The component will then either use the incorrect values or complain that it\n * was passed props of the incorrect type. This custom interpolator is added\n * using the `d3.interpolators` API, and prevents such cases from happening\n * for most values.\n *\n * @param {any} a - Start value.\n * @param {any} b - End value.\n * @returns {Function} Returns an interpolation function, if possible.\n */\nexport const victoryInterpolator = function (a, b) {\n  // If the values are strictly equal, or either value is null or undefined,\n  // just use the start value `a` or end value `b` at every step, as there is\n  // no reasonable in-between value. The value will jump, but we can try to\n  // jump at a good time (like the halfway point).\n  if (a === b || a == null || b == null) {\n    return function (t) {\n      // Switch to `b` halfway through the interpolation.\n      return (t < 0.5) ? a : b;\n    };\n  }\n  if (typeof a === \"function\" || typeof b === \"function\") {\n    return function (t) {\n      // We're interpolating to or from a function. The interpolated value will\n      // be a function that calls `a` (if it's a function) and `b` (if it's a\n      // function) and calls `d3.interpolate` on the resulting values.\n      // Note that our function won't necessarily be called (that's up to the\n      // component) - but if it does get called, it will return an\n      // appropriately interpolated value.\n      return function () {\n        const aval = (typeof a === \"function\") ? a.apply(this, arguments) : a;\n        const bval = (typeof b === \"function\") ? b.apply(this, arguments) : b;\n        return d3.interpolate(aval, bval)(t);\n      };\n    };\n  }\n};\n\nexport const addVictoryInterpolator = function () {\n  if (!interpolatorAdded) {\n    d3.interpolators.push(victoryInterpolator);\n    interpolatorAdded = true;\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/util.js\n **/"],"sourceRoot":""}